// Code generated by MockGen. DO NOT EDIT.
// Source: flow-data-service-server/internal/service (interfaces: GraphService)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	common "flow-data-service-server/pkg/models/common"
	graph "flow-data-service-server/pkg/models/graph"
	storage "flow-data-service-server/pkg/models/storage"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGraphService is a mock of GraphService interface.
type MockGraphService struct {
	ctrl     *gomock.Controller
	recorder *MockGraphServiceMockRecorder
}

// MockGraphServiceMockRecorder is the mock recorder for MockGraphService.
type MockGraphServiceMockRecorder struct {
	mock *MockGraphService
}

// NewMockGraphService creates a new mock instance.
func NewMockGraphService(ctrl *gomock.Controller) *MockGraphService {
	mock := &MockGraphService{ctrl: ctrl}
	mock.recorder = &MockGraphServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGraphService) EXPECT() *MockGraphServiceMockRecorder {
	return m.recorder
}

// DeleteGraph mocks base method.
func (m *MockGraphService) DeleteGraph(arg0 context.Context, arg1 *common.ProjectModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteGraph", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteGraph indicates an expected call of DeleteGraph.
func (mr *MockGraphServiceMockRecorder) DeleteGraph(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGraph", reflect.TypeOf((*MockGraphService)(nil).DeleteGraph), arg0, arg1)
}

// GetGraph mocks base method.
func (m *MockGraphService) GetGraph(arg0 context.Context, arg1 *common.ProjectModel) (*graph.DBGraph, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGraph", arg0, arg1)
	ret0, _ := ret[0].(*graph.DBGraph)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGraph indicates an expected call of GetGraph.
func (mr *MockGraphServiceMockRecorder) GetGraph(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGraph", reflect.TypeOf((*MockGraphService)(nil).GetGraph), arg0, arg1)
}

// ListGraph mocks base method.
func (m *MockGraphService) ListGraph(arg0 context.Context, arg1 *storage.ListGraphRequest) (*storage.ListGraphResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGraph", arg0, arg1)
	ret0, _ := ret[0].(*storage.ListGraphResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGraph indicates an expected call of ListGraph.
func (mr *MockGraphServiceMockRecorder) ListGraph(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGraph", reflect.TypeOf((*MockGraphService)(nil).ListGraph), arg0, arg1)
}

// SaveGraph mocks base method.
func (m *MockGraphService) SaveGraph(arg0 context.Context, arg1 *graph.DBGraph) (*graph.DBGraph, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveGraph", arg0, arg1)
	ret0, _ := ret[0].(*graph.DBGraph)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveGraph indicates an expected call of SaveGraph.
func (mr *MockGraphServiceMockRecorder) SaveGraph(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveGraph", reflect.TypeOf((*MockGraphService)(nil).SaveGraph), arg0, arg1)
}
