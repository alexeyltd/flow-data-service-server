// Code generated by MockGen. DO NOT EDIT.
// Source: flow-data-service-server/internal/repository (interfaces: GraphRepository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	common "flow-data-service-server/pkg/models/common"
	storage "flow-data-service-server/pkg/models/storage"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGraphRepository is a mock of GraphRepository interface.
type MockGraphRepository struct {
	ctrl     *gomock.Controller
	recorder *MockGraphRepositoryMockRecorder
}

// MockGraphRepositoryMockRecorder is the mock recorder for MockGraphRepository.
type MockGraphRepositoryMockRecorder struct {
	mock *MockGraphRepository
}

// NewMockGraphRepository creates a new mock instance.
func NewMockGraphRepository(ctrl *gomock.Controller) *MockGraphRepository {
	mock := &MockGraphRepository{ctrl: ctrl}
	mock.recorder = &MockGraphRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGraphRepository) EXPECT() *MockGraphRepositoryMockRecorder {
	return m.recorder
}

// DeleteProjectObject mocks base method.
func (m *MockGraphRepository) DeleteProjectObject(arg0 context.Context, arg1 *common.ProjectModel, arg2 common.ProjectObject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProjectObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteProjectObject indicates an expected call of DeleteProjectObject.
func (mr *MockGraphRepositoryMockRecorder) DeleteProjectObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProjectObject", reflect.TypeOf((*MockGraphRepository)(nil).DeleteProjectObject), arg0, arg1, arg2)
}

// GetProjectObject mocks base method.
func (m *MockGraphRepository) GetProjectObject(arg0 context.Context, arg1, arg2 common.ProjectObject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProjectObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetProjectObject indicates an expected call of GetProjectObject.
func (mr *MockGraphRepositoryMockRecorder) GetProjectObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProjectObject", reflect.TypeOf((*MockGraphRepository)(nil).GetProjectObject), arg0, arg1, arg2)
}

// ListGraph mocks base method.
func (m *MockGraphRepository) ListGraph(arg0 context.Context, arg1 *storage.ListGraphRequest) (*storage.ListGraphResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGraph", arg0, arg1)
	ret0, _ := ret[0].(*storage.ListGraphResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGraph indicates an expected call of ListGraph.
func (mr *MockGraphRepositoryMockRecorder) ListGraph(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGraph", reflect.TypeOf((*MockGraphRepository)(nil).ListGraph), arg0, arg1)
}

// SaveProjectObject mocks base method.
func (m *MockGraphRepository) SaveProjectObject(arg0 context.Context, arg1, arg2 common.ProjectObject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveProjectObject", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveProjectObject indicates an expected call of SaveProjectObject.
func (mr *MockGraphRepositoryMockRecorder) SaveProjectObject(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveProjectObject", reflect.TypeOf((*MockGraphRepository)(nil).SaveProjectObject), arg0, arg1, arg2)
}
